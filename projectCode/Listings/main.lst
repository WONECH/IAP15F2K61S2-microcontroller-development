C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "iic.H"
   3          #include "intrins.H"
   4          
   5          void display_nixie();
   6          void ledworking();
   7          void pwmjugment();
   8          void display_nixie();
   9          void work_8591();
  10          void relayworking();
  11          void scankey();
  12          
  13          unsigned char code duanma_nixie[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E
             -,0x79,0x71};
  14          unsigned char code duanma_nixie_dot[] = {0xBF,0x86,0xDB,0xCF,0xE6,0xED,0xFD,0x87,0xFF,0xEF,0x46};
  15          unsigned char w = 0 , w_p = 40;
  16          unsigned int f = 0 , f_p = 9000;
  17          unsigned int count_f = 0 , count_t = 0;
  18          unsigned char count_relay = 0 , relay_flag = 1 , case5state = 0x00;
  19          unsigned char view1 = 1 , view11 = 1 , view13 = 1 , view14 = 1;
  20          unsigned int len = 0 , len_p = 60;
  21          unsigned char pwmduty = 1 , count_t_pwm = 0;
  22          unsigned char count_led = 0 , ledstate = 0xff;
  23          
  24          void delay(unsigned char t)
  25          {
  26   1        while(t--);
  27   1      }
  28          
  29          void select573(unsigned char channel)
  30          {
  31   1        switch(channel)
  32   1        {
  33   2          case 0:P2 = (P2 & 0x1f) | 0x00;break;
  34   2          case 4:P2 = (P2 & 0x1f) | 0x80;break;
  35   2          case 5:P2 = (P2 & 0x1f) | 0xa0;break;
  36   2          case 6:P2 = (P2 & 0x1f) | 0xc0;break;
  37   2          case 7:P2 = (P2 & 0x1f) | 0xe0;break;
  38   2        }
  39   1      }
  40          
  41          void init_sys()
  42          {
  43   1        select573(4);
  44   1        P0 = 0xff;
  45   1        select573(5);
  46   1        P0 = 0x00;
  47   1        select573(7);
  48   1        P0 = 0xff;
  49   1      }
  50          
  51          void work_8591()
  52          {
  53   1        unsigned int v = 0;
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 2   

  54   1        I2CStart();
  55   1        I2CSendByte(0x90);
  56   1        I2CWaitAck();
  57   1        I2CSendByte(0x43);
  58   1        I2CWaitAck();
  59   1        I2CSendByte(((4/(80-w_p))*w+((80-w_p)/(4*w_p)))*51);
  60   1        I2CWaitAck();
  61   1        
  62   1        I2CStart();
  63   1        I2CSendByte(0x91);
  64   1        I2CWaitAck();
  65   1        v = I2CReceiveByte();
  66   1        v = v * 100 / 51;
  67   1        w = v * 2 / 10;
  68   1        I2CSendAck(1);
  69   1        I2CStop();
  70   1      }
  71          
  72          void Timer0Init()   //@12.000MHz
  73          {
  74   1        AUXR |= 0x80;   //定时器时钟1T模式
  75   1        TMOD |= 0x04;   //设置定时器模式
  76   1        TL0 = 0xff;   //设置定时初值
  77   1        TH0 = 0xff;   //设置定时初值
  78   1        TF0 = 0;    //清除TF0标志
  79   1        TR0 = 1;    //定时器0开始计时
  80   1        EA = 1;
  81   1        ET0 = 1;
  82   1      }
  83          
  84          void t0_routine() interrupt 1
  85          {
  86   1        count_f++;
  87   1      }
  88          
  89          void Timer2Init()   //200微秒@12.000MHz
  90          {
  91   1        AUXR &= 0xFB;   //定时器时钟12T模式
  92   1        T2L = 0x38;   //设置定时初值
  93   1        T2H = 0xFF;   //设置定时初值
  94   1        AUXR |= 0x10;   //定时器2开始计时
  95   1        EA = 1;
  96   1        IE2 |= 0x04;
  97   1      }
  98          
  99          void t2_routine() interrupt 12
 100          {
 101   1        count_led++;
 102   1        count_t_pwm++;
 103   1        if(count_t_pwm <= pwmduty)
 104   1        {
 105   2          case5state |= 0x20;
 106   2          select573(5);
 107   2          P0 = case5state;
 108   2          select573(0);
 109   2        }
 110   1        else if(count_t_pwm >= 5)
 111   1        {
 112   2          case5state &= 0xdf;
 113   2          select573(5);
 114   2          P0 = case5state;
 115   2          select573(0);
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 3   

 116   2          count_t_pwm = 0;
 117   2        }
 118   1        if(++count_t >= 5000)
 119   1        {
 120   2          f = count_f;
 121   2          count_t = 0;
 122   2          count_f = 0;
 123   2        }
 124   1      }
 125          
 126          void write_24c02()
 127          {
 128   1        I2CStart();
 129   1        I2CSendByte(0xa0);
 130   1        I2CWaitAck();
 131   1        I2CSendByte(0x00);
 132   1        I2CWaitAck();
 133   1        I2CSendByte(count_relay);
 134   1        I2CWaitAck();
 135   1        I2CStop();
 136   1      }
 137          
 138          void read_24c02()
 139          {
 140   1        I2CStart();
 141   1        I2CSendByte(0xa0);
 142   1        I2CWaitAck();
 143   1        I2CSendByte(0x00);
 144   1        I2CWaitAck();
 145   1        I2CStart();
 146   1        I2CSendByte(0xa1);
 147   1        I2CWaitAck();
 148   1        count_relay = I2CReceiveByte();
 149   1        I2CSendAck(1);
 150   1        I2CStop();
 151   1      }
 152          
 153          void Delay12us()    //@12.000MHz
 154          {
 155   1        unsigned char i;
 156   1      
 157   1        _nop_();
 158   1        _nop_();
 159   1        i = 33;
 160   1        while (--i);
 161   1      }
 162          
 163          void sendwave()
 164          {
 165   1        unsigned char i = 0;
 166   1        for(;i<8;i++)
 167   1        {
 168   2          P10 = 1;
 169   2          Delay12us();
 170   2          P10 = 0;
 171   2          Delay12us();
 172   2        }
 173   1      }
 174          
 175          void Timer1Init()   //@12.000MHz
 176          {
 177   1        AUXR &= 0xBF;   //定时器时钟12T模式
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 4   

 178   1        TMOD &= 0x0F;   //设置定时器模式
 179   1        TL1 = 0x00;   //设置定时初值
 180   1        TH1 = 0x00;   //设置定时初值
 181   1        TF1 = 0;    //清除TF1标志
 182   1        TR1 = 0;    //定时器暂不计时
 183   1      }
 184          
 185          void sonic()
 186          {
 187   1        sendwave();
 188   1        TR1 = 1;
 189   1        while((TF1 == 0)&&(P11 == 1));
 190   1        TR1 = 0;
 191   1        if(TF1 == 1)
 192   1        {
 193   2          len = 999;
 194   2          TF1 = 0;
 195   2        }
 196   1        else
 197   1        {
 198   2          len = TH1;
 199   2          len = (len << 8) | TL1;
 200   2          len = 17 * len / 1000;
 201   2          TL1 = 0x00;   //设置定时初值
 202   2          TH1 = 0x00;   //设置定时初值
 203   2        }
 204   1      }
 205          
 206          void display_bit_nixie(unsigned char pos , unsigned char dat)
 207          {
 208   1        select573(6);
 209   1        P0 = 0x01 << pos;
 210   1        select573(7);
 211   1        P0 = dat;
 212   1        delay(500);
 213   1        select573(7);
 214   1        P0 = 0xff;
 215   1        select573(0);
 216   1      }
 217          
 218          void display_nixie()
 219          {
 220   1        if(view1 == 1)
 221   1        {
 222   2          if(view11 == 1)
 223   2          {
 224   3            display_bit_nixie(0 , ~0x71);
 225   3            display_bit_nixie(1 , 0xff);
 226   3            if(f>99999)
 227   3            {
 228   4              display_bit_nixie(2 , ~duanma_nixie[f/100000]);
 229   4            }
 230   3            else
 231   3            {
 232   4              display_bit_nixie(2 , 0xff);
 233   4            }
 234   3            if(f>9999)
 235   3            {
 236   4              display_bit_nixie(3 , ~duanma_nixie[f%100000/10000]);
 237   4            }
 238   3            else
 239   3            {
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 5   

 240   4              display_bit_nixie(3 , 0xff);
 241   4            }
 242   3            if(f>999)
 243   3            {
 244   4              display_bit_nixie(4 , ~duanma_nixie[f%10000/1000]);
 245   4            }
 246   3            else
 247   3            {
 248   4              display_bit_nixie(4 , 0xff);
 249   4            }
 250   3            if(f>99)
 251   3            {
 252   4              display_bit_nixie(5 , ~duanma_nixie[f%1000/100]);
 253   4            }
 254   3            else
 255   3            {
 256   4              display_bit_nixie(5 , 0xff);
 257   4            }
 258   3            if(f>9)
 259   3            {
 260   4              display_bit_nixie(6 , ~duanma_nixie[f%100/10]);
 261   4            }
 262   3            else
 263   3            {
 264   4              display_bit_nixie(6 , 0xff);
 265   4            }
 266   3            display_bit_nixie(7 , ~duanma_nixie[f%10]);
 267   3          }
 268   2          else
 269   2          {
 270   3            unsigned char add = 0;
 271   3            if((f%100) > 50)
 272   3              add = 1;
 273   3            else
 274   3              add = 0;
 275   3            display_bit_nixie(0 , ~0x71);
 276   3            display_bit_nixie(1 , 0xff);
 277   3            display_bit_nixie(2 , 0xff);
 278   3            display_bit_nixie(3 , 0xff);
 279   3            if((f/100)>999)
 280   3            {
 281   4              display_bit_nixie(4 , ~duanma_nixie[((f/100)+add)%10000/1000]);
 282   4            }
 283   3            else
 284   3            {
 285   4              display_bit_nixie(4 , 0xff);
 286   4            }
 287   3            if((f/100)>99)
 288   3            {
 289   4              display_bit_nixie(5 , ~duanma_nixie[((f/100)+add)%1000/100]);
 290   4            }
 291   3            else
 292   3            {
 293   4              display_bit_nixie(5 , 0xff);
 294   4            }
 295   3            if((f/100)>9)
 296   3            {
 297   4              display_bit_nixie(6 , ~duanma_nixie_dot[((f/100)+add)%100/10]);
 298   4            }
 299   3            else
 300   3            {
 301   4              display_bit_nixie(6 , ~duanma_nixie_dot[0]);
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 6   

 302   4            }
 303   3            display_bit_nixie(7 , ~duanma_nixie[((f/100)+add)%10]);
 304   3          }
 305   2        }
 306   1        else if(view1 == 2)
 307   1        {
 308   2          display_bit_nixie(0 , ~0x76);
 309   2          display_bit_nixie(1 , 0xff);
 310   2          display_bit_nixie(2 , 0xff);
 311   2          display_bit_nixie(3 , 0xff);
 312   2          display_bit_nixie(4 , 0xff);
 313   2          display_bit_nixie(5 , 0xff);
 314   2          if(w>9)
 315   2          {
 316   3            display_bit_nixie(6 , ~duanma_nixie[w/10]);
 317   3          }
 318   2          else
 319   2          {
 320   3            display_bit_nixie(6 , 0xff);
 321   3          }
 322   2          display_bit_nixie(7 , ~duanma_nixie[w%10]);
 323   2        }
 324   1        else if(view1 == 3)
 325   1        {
 326   2          display_bit_nixie(0 , ~0x77);
 327   2          display_bit_nixie(1 , 0xff);
 328   2          display_bit_nixie(2 , 0xff);
 329   2          display_bit_nixie(3 , 0xff);
 330   2          display_bit_nixie(4 , 0xff);
 331   2          if(view13 == 1)
 332   2          {
 333   3            if(len>99)
 334   3            {
 335   4              display_bit_nixie(5 , ~duanma_nixie[len%1000/100]);
 336   4            }
 337   3            else
 338   3            {
 339   4              display_bit_nixie(5 , 0xff);
 340   4            }
 341   3            if(len>9)
 342   3            {
 343   4              display_bit_nixie(6 , ~duanma_nixie[len%100/10]);
 344   4            }
 345   3            else
 346   3            {
 347   4              display_bit_nixie(6 , 0xff);
 348   4            }
 349   3            display_bit_nixie(7 , ~duanma_nixie[len%10]);
 350   3          }
 351   2          else
 352   2          {
 353   3            display_bit_nixie(5 , ~duanma_nixie_dot[len%1000/100]);
 354   3            display_bit_nixie(6 , ~duanma_nixie[len%100/10]);
 355   3            display_bit_nixie(7 , ~duanma_nixie[len%10]);
 356   3          }
 357   2        }
 358   1        else
 359   1        {
 360   2          if(view14 == 1)
 361   2          {
 362   3            display_bit_nixie(0 , ~0x73);
 363   3            display_bit_nixie(1 , ~duanma_nixie[1]);
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 7   

 364   3            display_bit_nixie(2 , 0xff);
 365   3            display_bit_nixie(3 , 0xff);
 366   3            display_bit_nixie(4 , 0xff);
 367   3            if((f_p/100)>99)
 368   3            {
 369   4              display_bit_nixie(5 , ~duanma_nixie[((f_p/100))%1000/100]);
 370   4            }
 371   3            else
 372   3            {
 373   4              display_bit_nixie(5 , 0xff);
 374   4            }
 375   3            if((f_p/100)>9)
 376   3            {
 377   4              display_bit_nixie(6 , ~duanma_nixie_dot[((f_p/100))%100/10]);
 378   4            }
 379   3            else
 380   3            {
 381   4              display_bit_nixie(6 , ~duanma_nixie_dot[0]);
 382   4            }
 383   3            display_bit_nixie(7 , ~duanma_nixie[((f_p/100))%10]);
 384   3          }
 385   2          else if(view14 == 2)
 386   2          {
 387   3            display_bit_nixie(0 , ~0x73);
 388   3            display_bit_nixie(1 , ~duanma_nixie[2]);
 389   3            display_bit_nixie(2 , 0xff);
 390   3            display_bit_nixie(3 , 0xff);
 391   3            display_bit_nixie(4 , 0xff);
 392   3            display_bit_nixie(5 , 0xff);
 393   3            if(w_p>9)
 394   3            {
 395   4              display_bit_nixie(6 , ~duanma_nixie[w_p/10]);
 396   4            }
 397   3            else
 398   3            {
 399   4              display_bit_nixie(6 , 0xff);
 400   4            }
 401   3            display_bit_nixie(7 , ~duanma_nixie[w_p%10]);
 402   3          }
 403   2          else
 404   2          {
 405   3            display_bit_nixie(0 , ~0x73);
 406   3            display_bit_nixie(1 , ~duanma_nixie[3]);
 407   3            display_bit_nixie(2 , 0xff);
 408   3            display_bit_nixie(3 , 0xff);
 409   3            display_bit_nixie(4 , 0xff);
 410   3            display_bit_nixie(5 , 0xff);
 411   3            display_bit_nixie(6 , ~duanma_nixie_dot[len_p%1000/100]);
 412   3            display_bit_nixie(7 , ~duanma_nixie[len_p%100/10]);
 413   3          }
 414   2        }
 415   1      }
 416          
 417          void relayworking()
 418          {
 419   1        if(len>len_p)
 420   1        {
 421   2          case5state |= 0x10;
 422   2          select573(5);
 423   2          P0 = case5state;
 424   2          select573(0);
 425   2          if(relay_flag == 1)
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 8   

 426   2          {
 427   3            count_relay++;
 428   3            relay_flag = 0;
 429   3            write_24c02();
 430   3          }
 431   2        }
 432   1        else
 433   1        {
 434   2          case5state &= 0xef;
 435   2          select573(5);
 436   2          P0 = case5state;
 437   2          select573(0);
 438   2          relay_flag = 1;
 439   2        }
 440   1      }
 441          
 442          void ledworking()
 443          {
 444   1        if(view1 == 1)
 445   1        {
 446   2          ledstate &= 0xfe;
 447   2          select573(4);
 448   2          P0 = ledstate;
 449   2          select573(0);
 450   2        }
 451   1        else if((view1 == 4) && (view14 == 1))
 452   1        {
 453   2          if(count_led >= 200)
 454   2          {
 455   3            count_led = 0;
 456   3            if((ledstate & 0x01) == 0x00)
 457   3            {
 458   4              ledstate |= 0x01;
 459   4              select573(4);
 460   4              P0 = ledstate;
 461   4              select573(0);
 462   4            }
 463   3            else
 464   3            {
 465   4              ledstate &= 0xfe;
 466   4              select573(4);
 467   4              P0 = ledstate;
 468   4              select573(0);
 469   4            }
 470   3          }
 471   2        }
 472   1        else
 473   1        {
 474   2          ledstate |= 0x01;
 475   2          select573(4);
 476   2          P0 = ledstate;
 477   2          select573(0);
 478   2        }
 479   1        if(view1 == 2)
 480   1        {
 481   2          ledstate &= 0xfd;
 482   2          select573(4);
 483   2          P0 = ledstate;
 484   2          select573(0);
 485   2        }
 486   1        else if((view1 == 4) && (view14 == 2))
 487   1        {
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 9   

 488   2          if(count_led >= 200)
 489   2          {
 490   3            count_led = 0;
 491   3            if((ledstate & 0x02) == 0x00)
 492   3            {
 493   4              ledstate |= 0x02;
 494   4              select573(4);
 495   4              P0 = ledstate;
 496   4              select573(0);
 497   4            }
 498   3            else
 499   3            {
 500   4              ledstate &= 0xfd;
 501   4              select573(4);
 502   4              P0 = ledstate;
 503   4              select573(0);
 504   4            }
 505   3          }
 506   2        }
 507   1        else
 508   1        {
 509   2          ledstate |= 0x02;
 510   2          select573(4);
 511   2          P0 = ledstate;
 512   2          select573(0);
 513   2        }
 514   1        if(view1 == 3)
 515   1        {
 516   2          ledstate &= 0xfb;
 517   2          select573(4);
 518   2          P0 = ledstate;
 519   2          select573(0);
 520   2        }
 521   1        else if((view1 == 4) && (view14 == 3))
 522   1        {
 523   2          if(count_led >= 200)
 524   2          {
 525   3            count_led = 0;
 526   3            if((ledstate & 0x04) == 0x00)
 527   3            {
 528   4              ledstate |= 0x04;
 529   4              select573(4);
 530   4              P0 = ledstate;
 531   4              select573(0);
 532   4            }
 533   3            else
 534   3            {
 535   4              ledstate &= 0xfb;
 536   4              select573(4);
 537   4              P0 = ledstate;
 538   4              select573(0);
 539   4            }
 540   3          }
 541   2        }
 542   1        else
 543   1        {
 544   2          ledstate |= 0x04;
 545   2          select573(4);
 546   2          P0 = ledstate;
 547   2          select573(0);
 548   2        }
 549   1        if(f > f_p)
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 10  

 550   1        {
 551   2          ledstate &= 0xf7;
 552   2          select573(4);
 553   2          P0 = ledstate;
 554   2          select573(0);
 555   2        }
 556   1        else
 557   1        {
 558   2          ledstate |= 0x08;
 559   2          select573(4);
 560   2          P0 = ledstate;
 561   2          select573(0);
 562   2        }
 563   1        if(w > w_p)
 564   1        {
 565   2          ledstate &= 0xef;
 566   2          select573(4);
 567   2          P0 = ledstate;
 568   2          select573(0);
 569   2        }
 570   1        else
 571   1        {
 572   2          ledstate |= 0x10;
 573   2          select573(4);
 574   2          P0 = ledstate;
 575   2          select573(0);
 576   2        }
 577   1        if(len > len_p)
 578   1        {
 579   2          ledstate &= 0xdf;
 580   2          select573(4);
 581   2          P0 = ledstate;
 582   2          select573(0);
 583   2        }
 584   1        else
 585   1        {
 586   2          ledstate |= 0x20;
 587   2          select573(4);
 588   2          P0 = ledstate;
 589   2          select573(0);
 590   2        }
 591   1      }
 592          
 593          void pwmjugment()
 594          {
 595   1        if(f>f_p)
 596   1          pwmduty = 4;
 597   1        else
 598   1          pwmduty = 1;
 599   1      }
 600          
 601          void scankey()
 602          {
 603   1        if(P30 == 0)//S7
 604   1        {
 605   2          delay(100);
 606   2          if(P30 == 0)
 607   2          {
 608   3            if(view1 == 1)
 609   3            {
 610   4              if(view11 == 1)
 611   4                view11 = 2;
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 11  

 612   4              else
 613   4                view11 = 1;
 614   4              while(P30 == 0)                             //////
 615   4              {
 616   5                display_nixie();
 617   5                work_8591();
 618   5              }
 619   4            }
 620   3            else if(view1 == 2)
 621   3            {
 622   4              count_relay = 0;
 623   4              write_24c02();
 624   4              work_8591();
 625   4              display_nixie();                            ////
 626   4              while(P30 == 0)                             //////
 627   4              {
 628   5                display_nixie();
 629   5                work_8591();
 630   5              }
 631   4            }
 632   3            else if(view1 == 4)
 633   3            {
 634   4              if(view14 == 1)
 635   4              {
 636   5                if(f_p > 1000)
 637   5                  f_p -= 500;
 638   5                else
 639   5                  f_p = 12000;
 640   5              }
 641   4              else if(view14 == 2)
 642   4              {
 643   5                if(w_p > 10)
 644   5                  w_p -= 10;
 645   5                else
 646   5                  w_p = 60;
 647   5              }
 648   4              else
 649   4              {
 650   5                if(len_p > 10)
 651   5                  len_p -= 10;
 652   5                else
 653   5                  len_p = 120;
 654   5              }
 655   4            }
 656   3          }
 657   2        }
 658   1        if(P31 == 0) //S6
 659   1        {
 660   2          delay(100);
 661   2          if(P31 == 0)
 662   2          {
 663   3            if(view1 == 3)
 664   3            {
 665   4              if(view13 == 1)
 666   4                view13 = 2;
 667   4              else
 668   4                view13 = 1;
 669   4            }
 670   3            else if(view1 == 4)
 671   3            {
 672   4              if(view14 == 1)
 673   4              {
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 12  

 674   5                if(f_p < 12000)
 675   5                  f_p += 500;
 676   5                else
 677   5                  f_p = 1000;
 678   5              }
 679   4              else if(view14 == 2)
 680   4              {
 681   5                if(w_p < 60)
 682   5                  w_p += 10;
 683   5                else
 684   5                  w_p = 10;
 685   5              }
 686   4              else
 687   4              {
 688   5                if(len_p < 120)
 689   5                  len_p += 10;
 690   5                else
 691   5                  len_p = 10;
 692   5              }
 693   4            }
 694   3            while(P31 == 0)                             //////
 695   3            {
 696   4              display_nixie();
 697   4              work_8591();
 698   4            }
 699   3          }
 700   2        }
 701   1        if(P32 == 0) //S5
 702   1        {
 703   2          delay(100);
 704   2          if(P32 == 0)
 705   2          {
 706   3            if(view1 == 4)
 707   3            {
 708   4              if(view14 == 1)
 709   4                view14 = 2;
 710   4              else if(view14 == 2)
 711   4                view14 = 3;
 712   4              else
 713   4                view14 = 1;
 714   4            }
 715   3            while(P32 == 0)                             //////
 716   3            {
 717   4              display_nixie();
 718   4              work_8591();
 719   4            }
 720   3          }
 721   2        }
 722   1        if(P33 == 0) //S4
 723   1        {
 724   2          delay(100);
 725   2          if(P33 == 0)
 726   2          {
 727   3            if(view1 == 1)
 728   3              view1 = 2;
 729   3            else if(view1 == 2)
 730   3              view1 = 3;
 731   3            else if(view1 == 3)
 732   3              view1 = 4;
 733   3            else
 734   3              view1 = 1;
 735   3            while(P33 == 0)                             //////
C51 COMPILER V9.54   MAIN                                                                  05/24/2023 13:03:56 PAGE 13  

 736   3            {
 737   4              display_nixie();
 738   4              work_8591();
 739   4            }
 740   3          }
 741   2        }
 742   1      }
 743          
 744          void main()
 745          {
 746   1        Timer0Init();
 747   1        Timer1Init();
 748   1        Timer2Init();
 749   1        init_sys();
 750   1        read_24c02();
 751   1        while(1)
 752   1        {
 753   2          unsigned char i = 10;
 754   2          sonic();
 755   2          while(i--)
 756   2          {
 757   3            ledworking();
 758   3            pwmjugment();
 759   3            display_nixie();
 760   3            work_8591();
 761   3            relayworking();
 762   3            scankey();
 763   3          }
 764   2        }
 765   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2713    ----
   CONSTANT SIZE    =     27    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
